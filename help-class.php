<?phpclass wp_help {	var $post_labels = array ('name' => 'Help',							  'singular_name' => 'Help',							  'menu_name' => 'Help',							  'add_new' => 'Add Help',							  'add_new_item' => 'Add New Help',							  'edit' => 'Edit Help',							  'edit_item' => 'Edit Help',							  'new_item' => 'New Help',							  'view' => 'View Help',							  'view_item' => 'View Help',							  'search_items' => 'Search Help',							  'not_found' => 'No Help Found',							  'not_found_in_trash' => 'No Help Found in Trash',							);	var $post_pages = 'help';	var $post_name = 'Help';	var $capability_type = 'post';	var $post_type;	var $help_page_name;	var $on_edit_screen = true;	var $in_contextual = true;		function __construct($args = array()) {		if(is_array($args)) {			if(array_key_exists('post_pages',$args)) $this->post_pages = $args['post_pages'];			if(array_key_exists('labels',$args)) $this->post_labels = $args['labels'];		}		add_action('init', array($this, '_create_post_type'));	}		public function create_help($args) {		if(is_array($args)) {			if(array_key_exists('post_type',$args)) $this->post_type = $args['post_type'];			else die('You must pass a post type to display help on');			if(array_key_exists('page_title', $args)) $this->help_page_title = $args['page_title'];			else die('You must pass a title for you help page');		}		add_action('init',array($this, 'create_help_page'));		add_action('add_meta_boxes', array($this, 'add_meta_boxes') , 10,2);	}		function _create_post_type() {			if(!post_type_exists($this->post_pages) ) {		register_post_type($this->post_pages, 			array(	'label' => $this->post_name,			'description' => 'Post type for user editable help',			'public' => false,			'show_ui' => true,			'show_in_menu' => true,			'capability_type' => $this->capability_type,			'hierarchical' => false,			'query_var' => true,			'has_archive' => false			,'supports' => array('editor',),			'menu_position' => 12,			'labels' => $this->post_labels,) );		}	}		function get_help($slug) {		$help = new WP_query();		$args3['name'] = $slug;		$args3['post_type'] = 'help';		$help->query( $args3 );		if($help->post_count > 0) {		foreach( $help->posts as $post ) : setup_postdata($post); ?>		<?php return wpautop($post->post_content);?>		<?php endforeach;		}	}		function add_meta_boxes($post_type , $post) {		if($this->on_edit_screen) {			add_meta_box(				$this->post_type . '_help', // id of the <div> we'll add				'Help', //title				array($this, 'help_box_contents'), // callback function that will echo the box content				$this->post_type // where to add the box: on "post", "page", or "link" page			);		}		if($this->in_contextual) {			if ( $this->post_type == $post_type ) {				get_current_screen()->add_help_tab( array(					'id'      => 'page-help-id',					'title'   => __( 'Help' ),					'content' =>	$this->get_contents(),					) 				);			}		}	}		private function get_contents() {		$help = new WP_query();		$args['name'] = $this->help_page_name;		$args['post_type'] = $this->post_pages;		$help->query( $args );		if($help->post_count > 0) {		foreach( $help->posts as $post ) : setup_postdata($post); ?>		<?php return wpautop($post->post_content);?>		<?php endforeach;		}	}	function help_box_contents() {	?>	  <div class="custom_dashboard">			<?php echo $this->get_contents();?>		</div>		<?php	}	function create_help_page() {		if($this->wp_exist_post($this->post_type . '_wp_help') == '') {			$post = array(			  'comment_status' => 'closed', // 'closed' means no comments.			  'ping_status' =>  'closed', // 'closed' means pingbacks or trackbacks turned off			  'post_author' => 1, //The user ID number of the author.			  'post_name' => $this->post_type . '_wp_help', // The name (slug) for your post			  'post_status' => 'publish', //Set the status of the new post. 			  'post_title' => $this->help_page_title, //The title of your post.			  'post_type' => $this->post_pages,			  );			wp_insert_post( $post, true );		}	}		function wp_exist_post($slug) {		global $wpdb;		return $wpdb->get_row("SELECT ID FROM wp_posts WHERE post_name = '" . $slug . "'", 'ARRAY_A');	}}